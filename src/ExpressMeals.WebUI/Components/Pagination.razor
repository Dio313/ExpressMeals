@if (TotalPages > 0)
{
    <button type="button" class="btn btn-primary btn-mid" disabled="@((PageIndex == 1) ? "disabled" : null)" @onclick="@(() => OnClick.InvokeAsync(1))">
        <i class="fa fa-angle-double-left" aria-hidden="true"></i>
    </button>
    <button type="button" class="btn btn-primary btn-mid" disabled="@(HasPreviousPage ? null : "disabled")" @onclick="@(() => OnClick.InvokeAsync(PageIndex - 1))">
        <i class="fa fa-angle-left" aria-hidden="true"></i>
    </button>
    <span style="color: red; font-size: 16px;">&nbsp; @PageIndex &nbsp;</span>
    <button type="button" class="btn btn-primary btn-mid" disabled="@(HasNextPage ? null : "disabled")" @onclick="@(() => OnClick.InvokeAsync(PageIndex + 1))">
        <i class="fa fa-angle-right" aria-hidden="true"></i>
    </button>
    <button type="button" class="btn btn-primary btn-mid" disabled="@((PageIndex == TotalPages) ? "disabled" : null)" @onclick="@(() => OnClick.InvokeAsync(TotalPages))">
        <i class="fa fa-angle-double-right" aria-hidden="true"></i>
    </button>
}

@code {
    [Parameter]
    public int PageIndex { get; set; }

    [Parameter]
    public int TotalPages { get; set; }

    [Parameter]
    public bool HasPreviousPage { get; set; }

    [Parameter]
    public bool HasNextPage { get; set; }

    [Parameter]
    public EventCallback<int> OnClick { get; set; }

}